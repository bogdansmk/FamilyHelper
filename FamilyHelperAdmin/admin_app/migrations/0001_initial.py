# Generated by Django 4.0.6 on 2022-07-04 16:09

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Families',
            fields=[
                ('familyid', models.CharField(db_column='FamilyId', max_length=36, primary_key=True, serialize=False)),
                ('name', models.TextField(db_column='Name')),
            ],
            options={
                'db_table': 'Families',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Familylists',
            fields=[
                ('familylistid', models.CharField(db_column='FamilyListId', max_length=36, primary_key=True, serialize=False)),
                ('datecreated', models.DateTimeField(db_column='DateCreated')),
            ],
            options={
                'db_table': 'FamilyLists',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Geolocation',
            fields=[
                ('geolocationid', models.CharField(db_column='GeolocationId', max_length=36, primary_key=True, serialize=False)),
                ('latitude', models.DecimalField(db_column='Latitude', decimal_places=2, max_digits=18)),
                ('longitude', models.DecimalField(db_column='Longitude', decimal_places=2, max_digits=18)),
            ],
            options={
                'db_table': 'Geolocation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Listitem',
            fields=[
                ('listitemid', models.CharField(db_column='ListItemId', max_length=36, primary_key=True, serialize=False)),
                ('text', models.TextField(db_column='Text')),
                ('datecreated', models.DateTimeField(db_column='DateCreated')),
                ('datedone', models.DateTimeField(blank=True, db_column='DateDone', null=True)),
                ('orderplace', models.IntegerField(db_column='OrderPlace')),
                ('isdone', models.BooleanField(db_column='IsDone')),
            ],
            options={
                'db_table': 'ListItem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('id', models.CharField(db_column='Id', max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=256, null=True)),
                ('normalizedname', models.CharField(blank=True, db_column='NormalizedName', max_length=256, null=True, unique=True)),
                ('concurrencystamp', models.TextField(blank=True, db_column='ConcurrencyStamp', null=True)),
            ],
            options={
                'db_table': 'Roles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Subscriptionplans',
            fields=[
                ('subscriptionplanid', models.CharField(db_column='SubscriptionPlanId', max_length=36, primary_key=True, serialize=False)),
                ('name', models.TextField(db_column='Name')),
                ('description', models.TextField(db_column='Description')),
                ('pricepermonth', models.FloatField(db_column='PricePerMonth')),
                ('maxfamilymembers', models.IntegerField(db_column='MaxFamilyMembers')),
                ('maxsharedlists', models.IntegerField(db_column='MaxSharedLists')),
            ],
            options={
                'db_table': 'SubscriptionPlans',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userinfo',
            fields=[
                ('userinfoid', models.CharField(db_column='UserInfoId', max_length=36, primary_key=True, serialize=False)),
                ('tag', models.TextField(blank=True, db_column='Tag', null=True)),
                ('status', models.TextField(blank=True, db_column='Status', null=True)),
                ('birthdate', models.DateTimeField(db_column='BirthDate')),
                ('avatar', models.TextField(blank=True, db_column='Avatar', null=True)),
                ('firstname', models.TextField(db_column='FirstName')),
                ('lastname', models.TextField(blank=True, db_column='LastName', null=True)),
            ],
            options={
                'db_table': 'UserInfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.CharField(db_column='Id', max_length=36, primary_key=True, serialize=False)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=256, null=True)),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=256, null=True)),
                ('passwordhash', models.TextField(blank=True, db_column='PasswordHash', null=True)),
                ('normalizedusername', models.CharField(blank=True, db_column='NormalizedUserName', max_length=256, null=True, unique=True)),
                ('normalizedemail', models.CharField(blank=True, db_column='NormalizedEmail', max_length=256, null=True)),
                ('emailconfirmed', models.BooleanField(db_column='EmailConfirmed')),
                ('securitystamp', models.TextField(blank=True, db_column='SecurityStamp', null=True)),
                ('concurrencystamp', models.TextField(blank=True, db_column='ConcurrencyStamp', null=True)),
                ('phonenumber', models.TextField(blank=True, db_column='PhoneNumber', null=True)),
                ('phonenumberconfirmed', models.BooleanField(db_column='PhoneNumberConfirmed')),
                ('twofactorenabled', models.BooleanField(db_column='TwoFactorEnabled')),
                ('lockoutend', models.TextField(blank=True, db_column='LockoutEnd', null=True)),
                ('lockoutenabled', models.BooleanField(db_column='LockoutEnabled')),
                ('accessfailedcount', models.IntegerField(db_column='AccessFailedCount')),
            ],
            options={
                'db_table': 'Users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Usersubscription',
            fields=[
                ('usersubscriptonid', models.CharField(db_column='UserSubscriptonId', max_length=36, primary_key=True, serialize=False)),
                ('purchasedate', models.DateTimeField(db_column='PurchaseDate')),
                ('expiredate', models.DateTimeField(db_column='ExpireDate')),
            ],
            options={
                'db_table': 'UserSubscription',
                'managed': False,
            },
        ),
    ]
